git checkout main
git remote add upstream https://github.com/original-username/original-repo.git
git checkout -b ifeanyi
git push -u upstream ifeanyi
git add
git commit
git push  upstream ifeanyi

git push https://github.com/izuuarch/ggt-shanahan-pt.git --delete master


personal

git checkout main
git remote add personal https://github.com/your-username/your-personal-repo.git
git push -u personal main

# If your personal repository already has some code and history, and you want to keep it, you'll need to pull first and then push:
git pull personal main --allow-unrelated-histories
git add .
git commit -m "Merged personal repo with local main"
git push -u personal main



git push personal main --force


git push upstream your-branch-name  # push to the upstream repo
git push personal main  # push to your personal repo

git push https://github.com/ifeanyiifeanyi/portal-starter.git


// my
repo
git push -u https://github.com/ifeanyiifeanyi/portal-starter.git

// another method for selecting and displaying values via relationships
<td>{{ $departments->find($assignment->department_id)->name }}</td>
<td>{{ $semesters->find($assignment->semester_id)->name }}</td>


// NOTE TO SELF how, registere courses pening status
// works needs to be improved


        // $enrollments = CourseEnrollment::where('course_id', $courseId)
        //     ->where('academic_session_id', $academicSessionId)
        //     ->whereHas('semesterCourseRegistration', function ($query) use ($semesterId, $academicSessionId) {
        //         $query->where('semester_id', $semesterId)
        //             ->where('academic_session_id', $academicSessionId);
        //     })
        //     ->with(['student.user', 'semesterCourseRegistration'])
        //     ->get();

            // $('#department').change(function() {
            //     var departmentId = $(this).val();

            //     // Fetch levels
            //     $.get('/admin/department/' + departmentId + '/levels', function(levels) {
            //         $('#level').empty();
            //         $.each(levels, function(index, level) {
            //             $('#level').append($('<option>', {
            //                 value: level,
            //                 text: 'Level ' + level
            //             }));
            //         });
            //     });

            //     // Clear course and teacher
            //     $('#course').empty();
            //     $('#teacher').val('');
            // });

            // $('#level').change(function() {
            //     var departmentId = $('#department').val();
            //     var level = $(this).val();

            //     // Fetch courses
            //     $.get('/admin/courses', {
            //         department_id: departmentId,
            //         level: level
            //     }, function(courses) {
            //         $('#course').empty();
            //         $.each(courses, function(index, course) {
            //             $('#course').append($('<option>', {
            //                 value: course.id,
            //                 text: course.code + ' - ' + course.title
            //             }));
            //         });
            //     });

            //     // Clear teacher
            //     $('#teacher').val('');
            // });

            // $('#course').change(function() {
            //     var courseId = $(this).val();
            //     var departmentId = $('#department').val();
            //     var level = $('#level').val();

            //     // Fetch teacher assignment
            //     $.get('/admin/course-assignment', {
            //         course_id: courseId,
            //         department_id: departmentId,
            //         level: level
            //     }, function(data) {
            //         console.log(data)
            //         $('#teacher').val(data.teacher_name);
            //     });
            // });
